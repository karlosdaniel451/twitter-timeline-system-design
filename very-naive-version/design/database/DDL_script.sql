-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS public.users
(
    id uuid DEFAULT uuid_generate_v4() ,
    username character varying(15) NOT NULL,
    name character varying(50) NOT NULL,
    description character varying(160),
    created_at timestamp without time zone NOT NULL DEFAULT NOW(),
    PRIMARY KEY (id),
    CONSTRAINT username_unique_constraint UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.tweets
(
    id uuid DEFAULT uuid_generate_v4(),
    text character varying(400) NOT NULL,
    user_id uuid,
    replies_to uuid,
    conversation_id uuid,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.likes
(
    users_id uuid,
    tweets_id uuid,
    liked_at timestamp without time zone NOT NULL,
    PRIMARY KEY (users_id, tweets_id)
);

CREATE TABLE IF NOT EXISTS public.retweets
(
    users_id uuid,
    tweets_id uuid,
    retweeted_at timestamp without time zone NOT NULL,
    PRIMARY KEY (users_id, tweets_id)
);

CREATE TABLE IF NOT EXISTS public.follows
(
    follower_id uuid DEFAULT uuid_generate_v4() ,
    followee_id uuid DEFAULT uuid_generate_v4() ,
    followed_at timestamp without time zone,
    PRIMARY KEY (follower_id, followee_id)
);

ALTER TABLE IF EXISTS public.tweets
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tweets
    ADD FOREIGN KEY (replies_to)
    REFERENCES public.tweets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tweets
    ADD FOREIGN KEY (conversation_id)
    REFERENCES public.tweets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.likes
    ADD FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.likes
    ADD FOREIGN KEY (tweets_id)
    REFERENCES public.tweets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.retweets
    ADD FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.retweets
    ADD FOREIGN KEY (tweets_id)
    REFERENCES public.tweets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.follows
    ADD FOREIGN KEY (follower_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.follows
    ADD FOREIGN KEY (follower_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
